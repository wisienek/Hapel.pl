generator client {
  provider = "prisma-client-js"
  output   = "../src/database/client1"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Eliksiry {
  serial     Int    @default(autoincrement())
  nazwa      String @db.VarChar(80)
  kolor      String @db.VarChar(45)
  hex        String @db.VarChar(10)
  zapach     String @default("brak zapachu") @db.VarChar(120)
  smak       String @default("brak smaku") @db.VarChar(120)
  data       Int    @default(14)
  czas       String @default("60") @db.VarChar(45)
  inokreacja String @db.VarChar(256)
  pcena      Int?   @default(0)
  ile        Int    @default(4) @db.TinyInt

  @@id([serial, nazwa])
}

model Oczekujace {
  id             String  @db.VarChar(16)
  eliksir        String  @db.VarChar(120)
  gracz          String  @db.VarChar(45)
  uuid           String  @db.VarChar(60)
  discord        String? @db.VarChar(30)
  przepis        String  @db.MediumText
  cena           Int     @default(0)
  odebrane       Int     @default(0) @db.TinyInt
  weryfikowane   Int     @default(3) @db.TinyInt
  data_odebrania String? @db.VarChar(45)
  kociolek       String? @map("kociołek") @db.VarChar(80)
  pdata          String? @db.VarChar(45)
  pile           Int?    @db.TinyInt

  @@id([id, eliksir])
  @@map("Oczekujące")
}

model Skladniki {
  serial    Int    @id @unique(map: "serial_UNIQUE") @default(autoincrement())
  nazwa     String @db.VarChar(80)
  typ       String @db.VarChar(45)
  cena      Float  @db.Float
  ilosc     Int
  jednostka String @db.VarChar(10)
  dostepny  Int    @default(1) @map("dostępny") @db.TinyInt

  @@map("Składniki")
}

model Zlane {
  id   String @id @db.VarChar(16)
  json String @db.VarChar(16384)
  data String @db.VarChar(45)
}

model autoRoles {
  id   Int    @default(autoincrement())
  name String @db.VarChar(128)
  dcid String @db.LongText

  @@id([id, name])
}

model betaTests {
  id Int    @id @default(autoincrement())
  ip String @db.VarChar(45)
}

model cennik {
  id       Int     @id @default(autoincrement())
  nazwa    String  @db.VarChar(120)
  item     String? @db.VarChar(4096)
  cena     Float   @default(0) @db.Float
  dostepne Int     @default(1) @map("dostępne") @db.TinyInt
  sale     Int?
  monly    Int     @default(0) @db.TinyInt
  msale    Int?
  wer      Int     @default(0) @db.TinyInt
  opis     String? @db.VarChar(4096)
  tagi     String? @db.VarChar(512)
  autor    String? @db.VarChar(60)
}

model discordInfo {
  discord       String   @id @db.VarChar(20)
  username      String   @db.VarChar(120)
  blocked       Boolean  @default(false)
  created       DateTime @default(now()) @db.Date
  discriminator String   @db.VarChar(4)
  avatar        String?  @db.VarChar(256)
  guilds        String?  @db.Text
  email         String?  @db.Text
}

model karty {
  numer Int    @id @default(autoincrement()) @db.SmallInt
  typ   String @db.VarChar(45)
  nazwa String @db.VarChar(256)
  opis  String @db.VarChar(4096)
}

model kopie {
  serial Int    @id @default(autoincrement())
  id     Int
  uuid   String @default("") @db.VarChar(60)
  nazwa  String @default("") @db.VarChar(60)
  itemy  String @db.MediumText
  data   BigInt
}

model lekcje {
  id        Int     @id @default(autoincrement())
  day       Boolean @default(false)
  class     Boolean @default(true)
  repeating Int?    @db.MediumInt
  name      String  @db.VarChar(128)
  start     String  @db.VarChar(16)
  end       String  @db.VarChar(16)
  place     String? @db.VarChar(256)
  prof      String? @db.VarChar(256)
}

model main {
  serial       Int    @id @default(autoincrement())
  id           Int
  uuid         String @default("") @db.VarChar(60)
  nazwa        String @default("") @db.VarChar(60)
  itemy        String @db.LongText
  aktualizacja BigInt
}

model mojeKarty {
  serial Int    @id @default(autoincrement())
  karta  Int    @db.SmallInt
  uuid   String @db.VarChar(60)
}

model online {
  id     Int      @id @default(autoincrement())
  data   DateTime @db.DateTime(0)
  ilosc  Int
  czas   String   @db.VarChar(8)
  gracze String   @db.VarChar(2048)
}

model planExtra {
  planid Int      @id
  Sprof  String?  @db.VarChar(512)
  Splace String?  @db.VarChar(128)
  Sstart String?  @db.VarChar(16)
  Send   String?  @db.VarChar(16)
  Sday   Boolean?
  when   String?  @db.VarChar(64)
}

model planfollow {
  id   Int     @id @default(autoincrement())
  user String  @db.VarChar(64)
  kl1  Boolean @default(false)
  kl2  Boolean @default(false)
  kl3  Boolean @default(false)
  kl4  Boolean @default(false)
}

model playerInfo {
  serial      Int     @id @default(autoincrement())
  discord     String? @db.VarChar(32)
  nick        String  @db.VarChar(64)
  uuid        String  @db.VarChar(64)
  displayName String? @db.VarChar(256)
  plec        String? @db.Char(1)
  wiek        Int?    @db.SmallInt
  image       String? @db.VarChar(128)
  visible     Int     @default(0) @db.TinyInt
  archived    Int     @default(0) @db.TinyInt
}

model przepisy {
  id      Int    @id @default(autoincrement())
  autor   String @db.VarChar(60)
  eliksir String @db.VarChar(120)
  item    String @db.VarChar(8192)
  oceny   String @default("{}") @db.VarChar(4096)
  ocena   Int    @default(0)
  cena    Int    @default(0)
}

model roles {
  id          Int      @default(autoincrement())
  name        String   @db.VarChar(128)
  displayname String?  @db.VarChar(32)
  creator     String?  @db.VarChar(24)
  parent      String?  @db.VarChar(128)
  dcperms     BigInt?
  dcid        String?  @db.VarChar(128)
  dccolor     String?  @db.VarChar(16)
  verified    Boolean  @default(false)
  canResign   Boolean? @default(true)
  isFree      Boolean? @default(false)
  canApply    Boolean? @default(false)

  @@id([id, name])
}

model sessions {
  session_id String  @id @db.VarChar(128)
  expires    Int     @db.UnsignedInt
  data       String? @db.MediumText
}

model Listener {
  id      Int    @id @default(autoincrement())
  guild   String @db.VarChar(60)
  channel String @db.VarChar(60)
  emoji   String @db.VarChar(16)
  role    String @db.VarChar(60)
  message String @db.VarChar(60)
}
